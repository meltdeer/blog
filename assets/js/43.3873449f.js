(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{452:function(e,t,r){"use strict";r.r(t);var s=r(2),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"prerequirts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequirts"}},[e._v("#")]),e._v(" Prerequirts")]),e._v(" "),t("ul",[t("li",[e._v("Git")]),e._v(" "),t("li",[e._v("pnpm")])]),e._v(" "),t("h2",{attrs:{id:"怎么安装pnpm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么安装pnpm"}},[e._v("#")]),e._v(" 怎么安装pnpm")]),e._v(" "),t("p",[e._v("PNPM 是一个面向 JavaScript 项目的包管理器，它的目标是提供更快、更高效的包管理解决方案。与传统的包管理器（如 npm 或 Yarn）相比，PNPM 采用了不同的工作原理和文件结构，以减少磁盘空间占用和网络传输量，并提供更快的安装、更新和构建速度。")]),e._v(" "),t("p",[e._v("下面是 PNPM 的一些特点和功能：")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("共享依赖")]),e._v(": PNPM 使用一个共享的存储位置来存储项目的依赖，而不是将每个项目的依赖复制到各自的目录中。这样可以节省磁盘空间，并减少安装时间和网络传输量。")]),e._v(" "),t("li",[t("strong",[e._v("快速安装和更新")]),e._v(": 由于 PNPM 只需要从共享存储中链接依赖，而不是复制文件，因此安装和更新依赖的速度更快。")]),e._v(" "),t("li",[t("strong",[e._v("并发安装")]),e._v(": PNPM 支持并发安装依赖，可以在同一时间安装多个包，从而进一步提高安装速度。")]),e._v(" "),t("li",[t("strong",[e._v("本地缓存")]),e._v(": PNPM 使用本地缓存来存储已下载的包，这样在多个项目之间共享相同的包时可以节省时间和网络带宽。")]),e._v(" "),t("li",[t("strong",[e._v("命令行工具")]),e._v(": PNPM 提供了一组命令行工具，用于初始化项目、安装依赖、运行脚本等常见的包管理任务。")])]),e._v(" "),t("p",[e._v("PNPM 兼容大部分基于 npm 的项目，并且可以无缝地与现有的项目集成。如果你想尝试 PNPM，你可以通过在终端中运行 "),t("code",[e._v("npm install -g pnpm")]),e._v(" 来全局安装 PNPM。然后，你可以在项目目录中使用 "),t("code",[e._v("pnpm")]),e._v(" 命令来替代 "),t("code",[e._v("npm")]),e._v(" 或 "),t("code",[e._v("yarn")]),e._v("，以执行包管理操作。")]),e._v(" "),t("h3",{attrs:{id:"在windows安装pnpm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在windows安装pnpm"}},[e._v("#")]),e._v(" 在windows安装pnpm")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("首先，确保你已经安装了 Node.js。你可以在 Node.js "),t("a",{attrs:{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方网站"),t("OutboundLink")],1),e._v("下载并安装最新版本的 Node.js。")])]),e._v(" "),t("li",[t("p",[e._v('打开命令提示符或 PowerShell，可以通过按下 Win + R 键，然后输入 "cmd" 或 "powershell"，并按下回车键来打开。')])]),e._v(" "),t("li",[t("p",[e._v("在命令提示符或 PowerShell 中运行以下命令，以全局安装 "),t("code",[e._v("pnpm")])]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("npm install "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("g pnpm\n")])])])]),e._v(" "),t("li",[t("p",[e._v("安装完成后，你可以验证 "),t("code",[e._v("pnpm")]),e._v("是否成功安装，运行以下命令检查"),t("code",[e._v("pnpm")]),e._v(" 的版本：")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("pnpm "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("version\n")])])])])]),e._v(" "),t("p",[e._v("如果成功显示 "),t("code",[e._v("pnpm")]),e._v("版本号，则表示安装成功。")]),e._v(" "),t("h1",{attrs:{id:"clone-repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clone-repository"}},[e._v("#")]),e._v(" Clone Repository")]),e._v(" "),t("p",[e._v("在本地克隆这个"),t("a",{attrs:{href:"https://github.com/meltdeer/blog",target:"_blank",rel:"noopener noreferrer"}},[e._v("仓库"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language-git extra-class"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[e._v("git clone git@github.com:meltdeer/blog.git\n")])])]),t("p",[e._v("执行"),t("code",[e._v("setup_env.sh")]),e._v(" 或 "),t("code",[e._v("setup_env.bat")])])])}),[],!1,null,null,null);t.default=a.exports}}]);